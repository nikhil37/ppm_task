# Generated by Django 4.0.3 on 2022-04-20 12:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='aadhar',
            fields=[
                ('a_id', models.AutoField(primary_key=True, serialize=False)),
                ('aadhar_no', models.CharField(max_length=12)),
                ('is_active', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='address',
            fields=[
                ('a_id', models.AutoField(primary_key=True, serialize=False)),
                ('street', models.CharField(max_length=150)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('postal_code', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='bank',
            fields=[
                ('b_id', models.AutoField(primary_key=True, serialize=False)),
                ('account_no', models.CharField(max_length=50)),
                ('bank_name', models.CharField(max_length=200)),
                ('ifsc_code', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='past_job_experience',
            fields=[
                ('p_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=200)),
                ('job_role', models.CharField(max_length=100)),
                ('duration', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='qualification',
            fields=[
                ('q_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=500)),
                ('year_of_passing', models.IntegerField()),
                ('percentage', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='personal_detail',
            fields=[
                ('pd_id', models.AutoField(primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('blood_group', models.CharField(max_length=5)),
                ('contact_no', models.JSONField(default=list)),
                ('email', models.JSONField(default=list)),
                ('aadhar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.aadhar')),
                ('bank', models.ManyToManyField(related_name='pd_bank', to='api.bank')),
                ('past_job_experience', models.ManyToManyField(related_name='pd_past_job_experience', to='api.past_job_experience')),
                ('qualification', models.ManyToManyField(related_name='pd_qualification', to='api.qualification')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
